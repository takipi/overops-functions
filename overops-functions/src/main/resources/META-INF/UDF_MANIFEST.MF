<?xml version='1.0' encoding='utf-8'?>
<udf_manifest>
   <version>2.3</version>
   <library_name>overops-public-lib</library_name>
   <backwards_compatible>true</backwards_compatible>
   <functions>
	   <function>
	      <function_type>CHANNEL</function_type>
	      <function_name>apply-label</function_name>
	      <description>
	      	Applies a specific input label to events.
	      	See code at: https://git.io/fx6sc
	      </description>
	      <param_type>TEXT</param_type>
	      <class_file>com.takipi.udf.label.ApplyLabelFunction</class_file>
	      <default_params>
	      	# Label to apply to events
	      	# label=sample_label_name
	      </default_params>
	   </function>
	   <function>
	      <function_type>ANOMALY</function_type>
	      <function_name>Relative Threshold</function_name>
	      <description>
	      	Compare the view event volume against an error rate (%) and optional fixed threshold. Github: https://git.io/fx6sl
	      </description>
	      <param_type>TEXT</param_type>
	      <class_file>com.takipi.udf.volume.RelativeThresholdFunction</class_file>
	      <default_params>	
			# Acceptable error rate (1 to 100)
			rate = 10
			
			# Optional (0 to ignore) fixed min volume threshold
			threshold = 1000		
	      </default_params>
	   </function>
	   	   <function>
	      <function_type>ANOMALY</function_type>
	      <function_name>Anomaly</function_name>
	      <description>
	      	 Alert on events experiencing anomalous volume within a rolling time window. Github : https://git.io/fpwNI
	      </description>
	      <param_type>TEXT</param_type>
	      <class_file>com.takipi.udf.volume.RegressionFunction</class_file>
	      <default_params>
	      	# the active time window (min) to inspect
	      	activeTimespan = 1440
	      	
	      	# The baseline time window to compare against (min) 
	      	baseTimespan = 10080
	      	
	      	# Change in % that would be considered a regression
	      	regressionDelta = 100
	       
	      	# Min rate in % that an event must exceed
	      	minErrorRateThreshold = 10
	      	
	      	# Min fixed volume that an event must exceed
	      	minVolumeThreshold = 1000
	      </default_params>
	      <admin_function>false</admin_function>
	   </function>
	   <function>
	      <function_type>CHANNEL</function_type>
	      <function_name>Routing</function_name>
	      <description>Classify incoming events according to the functional component within the code from which they originated. See code at: https://git.io/fx6s8</description>
	      <param_type>TEXT</param_type>
	      <class_file>com.takipi.udf.infra.InfrastructureRoutingFunction</class_file>
	      <default_params>
	      	# A list of comma delimited tuples in the form of A=B;C=D;E=F, where the first item within the tuple is a namespace (e.g com.google, org.apache), and the second is a label which will applied to the event if it matches that namespace (e.g Google, Apache). If left empty, uses predefined common libraries namespaces. The full category list can be found at https://git.io/fADUX
	      	# namespaces=com.company.db=db;com.company.util=utility

	      	# Category name where auto-generated routing view will be created.
	      	category_name=tiers
	      </default_params>
	      <admin_function>true</admin_function>
	   </function>
	   <function>
	      <function_type>ANOMALY</function_type>
	      <function_name>Transaction Timers</function_name>
	      <description>
	      	Automatically set timers on application entry points based on average runtime. See code at: https://git.io/fxiy0
	      </description>
	      <param_type>TEXT</param_type>
	      <class_file>com.takipi.udf.timer.PeriodicAvgTimerFunction</class_file>
	      <default_params>
	      	# Time period to look at, in hours.
	      	timespan = 24

	      	# Number of std deviations from the mean time to place threshold on.
	      	std_dev = 1.0

	      	# Minimum value allowed for a given threshold.
	      	minimum_absolute_threshold = 30

	      	# Mimimum necessary delta between existing and new threshold value which merits an update of it.
	      	minimum_threshold_delta = 5
	      </default_params>
	      <admin_function>true</admin_function>
	   </function>
	   	   <function>
	      <function_type>ANOMALY</function_type>
	      <function_name>App Routing</function_name>
	      <description>
	      	Automatically create views for active applications. See code at: https://git.io/fxiy0
	      </description>
	      <param_type>TEXT</param_type>
	      <class_file>com.tkipi.udf.app.AppRoutingFunction</class_file>
	      <default_params>
	      	# Name of category in which to place views
	      	category = Apps

	      	# Max num of views to create
	      	maxViews = 50     	
	      </default_params>
	      <admin_function>true</admin_function>
	   </function>
	   	   </function>
	   	   <function>
	      <function_type>ANOMALY</function_type>
	      <function_name>Deployment Routing</function_name>
	      <description>
	      	Automatically create views for active deployments. See code at: https://git.io/fxiy0
	      </description>
	      <param_type>TEXT</param_type>
	      <class_file>com.takipi.udf.deployment.DeploymentRoutingFunction</class_file>
	      <default_params>
	      	# Name of category in which to place views
	      	category = CI / CD

	      	# Max num of views to create (views for non active deployments will be removed)
	      	maxViews = 50  
	      	
	      	# An optional prefix to add to the view name (e.g. 'New in') 
	      	prefix = 'New in '  
	      	   	
	      </default_params>
	      <admin_function>true</admin_function>
	   </function>
	   <function>
	      <function_type>ANOMALY</function_type>
	      <function_name>Severity</function_name>
	      <description>
	      	Mark events as New if they were introduced in an active deployment and are important. Mark events as Regressed if they have crossed a volume threshold against a previous timeframe. See code at: https://git.io/fxiSl
	      </description>
	      <param_type>TEXT</param_type>
	      <class_file>com.takipi.udf.severity.SeverityFunction</class_file>
	      <default_params>
	      	# the time window (minutes) that we compare the baseline to
	      	activeTimespan = 1440
	      	
	      	# the time window (minutes) to compare the last &lt;activeTimespan&gt; against
	      	baseTimespan = 10080
	      	
	      	# a change in % that would be considered a regression
	      	regressionDelta = 1
	      	
	      	# a change in % that would be considered a critical regression (zero means no critical regressions)
	      	criticalRegressionDelta = 0
	      	
	      	# should the function attempt to apply seasonality algorithm
	      	applySeasonality = false
	      	
	      	# comma delimited list of exception types that are severe by definition
	      	criticalExceptionTypes = NullPointerException;IndexOutOfBoundsException;ClassCastException;AssertionError
	      	
	      	# minimum rate that a regression, new + non-critical event must exceed
	      	minErrorRateThreshold = 0.1
	      	
	      	# minimum volume that a regression, new + non-critical event must exceed
	      	minVolumeThreshold = 500
	      	
	      	# name of category in which to place views
	      	category = Severe
	      	
	      	# how to label new issues
	      	newEventslabel = New Issue
	      	
	      	# view to contain new issues
	      	newEventsView = New Issues
	      	
	      	# how to label regressed issues
	      	regressedEventsLabel = Regression
	      	
	      	# view to contain regressed issues
	      	regressedEventsView = Regressions
	      	
	      	# how long (minutes) should these labels "stick" to an event
	      	labelRetention = 1440
	      </default_params>
	      <admin_function>true</admin_function>
	   </function>
	</functions>
</udf_manifest>
